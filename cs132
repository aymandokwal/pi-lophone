######################################################################
# Name: Ayman Dokwal
# Date: February 9, 2018
# Description: Creating a working basic calculator.
######################################################################
from Tkinter import *
import RPi.GPIO as GPIO
from time import sleep, time
import pygame

GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)

DEBUG = False

# the main GUI class 
class MainGUI(Frame):
    # the constructor 
    def __init__(self, parent):
              Frame.__init__(self, parent, bg="white") 
              parent.attributes("-fullscreen", True) 
              self.setupGUI()

    # sets up the GUI 
    def setupGUI(self):
    
        
        # configure the rows and columns of the Frame to adjust
        #  to the window
        # there are 10 rows 
        for row in range(10):
             Grid.rowconfigure(self, row, weight=1)
        # there are 30 columns 
        for col in range(30):
             Grid.columnconfigure(self, col, weight=1)
        
        # set the button's image 
        # put the button in its proper row and column
        img = PhotoImage(file="red1.png")
        button = Button(self, bg="white",image=img, borderwidth=0, highlightthickness=0,\
        activebackground="white", command=lambda: self.process("red"))
        button.image = img
        button.grid(row=4, column=11, sticky=N+S+E+W)
        # the same is done for the rest of the buttons

        img = PhotoImage(file="orange1.png")
        button = Button(self, bg="white",image=img, borderwidth=0, highlightthickness=0,\
        activebackground="white", command=lambda:\
         self.process("orange"))
        button.image = img
        button.grid(row=4, column=12, sticky=N+S+E+W)

        img = PhotoImage(file="yellow1.png")
        button = Button(self, bg="white",image=img, borderwidth=0, highlightthickness=0,\
        activebackground="white", command=lambda:\
         self.process("yellow"))
        button.image = img
        button.grid(row=4, column=13, sticky=N+S+E+W)

        img = PhotoImage(file="green1.png")
        button = Button(self, bg="white",image=img, borderwidth=0, highlightthickness=0,\
        activebackground="white", command=lambda:\
         self.process("green"))
        button.image = img
        button.grid(row=4, column=14, sticky=N+S+E+W)

        img = PhotoImage(file="aqua1.png")
        button = Button(self, bg="white",image=img, borderwidth=0, highlightthickness=0,\
        activebackground="white", command=lambda:\
         self.process("aqua"))
        button.image = img
        button.grid(row=4, column=15, sticky=N+S+E+W)

        img = PhotoImage(file="lightblue1.png")
        button = Button(self, bg="white",image=img, borderwidth=0, highlightthickness=0,\
        activebackground="white", command=lambda:\
         self.process("lightblue"))
        button.image = img
        button.grid(row=4, column=16, sticky=N+S+E+W)

        img = PhotoImage(file="blue1.png")
        button = Button(self, bg="white",image=img, borderwidth=0, highlightthickness=0,\
        activebackground="white", command=lambda:\
         self.process("blue"))
        button.image = img
        button.grid(row=4, column=17, sticky=N+S+E+W)

        img = PhotoImage(file="violet1.png")
        button = Button(self, bg="white",image=img, borderwidth=0, highlightthickness=0,\
        activebackground="white", command=lambda:\
         self.process("violet"))
        button.image = img
        button.grid(row=4, column=18, sticky=N+S+E+W)

        

        # pack the GUI
        self.pack(fill=BOTH, expand=1)
        
    # processes button presses 
    def process(self, button):

        if (button == "red"):
            pygame.init()
            sound = pygame.mixer.Sound ("red2.wav")
            sound.play()

            GPIO.setup(17, GPIO.OUT)
            GPIO.output(17, GPIO.HIGH)
            sleep (.5)
            GPIO.output(17, GPIO.LOW)

        elif (button == "orange"):
            pygame.init()
            sound = pygame.mixer.Sound ("orange2.wav")
            sound.play()
            
            GPIO.setup(6, GPIO.OUT)
            GPIO.output(6, GPIO.HIGH)
            sleep (.5)
            GPIO.output(6, GPIO.LOW)

        elif (button == "yellow"):
            pygame.init()
            sound = pygame.mixer.Sound ("yellow2.wav")
            sound.play()

            GPIO.setup(17, GPIO.OUT)
            GPIO.output(17, GPIO.HIGH)
            sleep (.5)
            GPIO.output(17, GPIO.LOW)


        elif (button == "green"):
            pygame.init()
            sound = pygame.mixer.Sound ("green2.wav")
            sound.play()

            GPIO.setup(17, GPIO.OUT)
            GPIO.output(17, GPIO.HIGH)
            sleep (.5)
            GPIO.output(17, GPIO.LOW)


        elif (button == "aqua"):
            pygame.init()
            sound = pygame.mixer.Sound ("lightblue2.wav")
            sound.play()

            GPIO.setup(17, GPIO.OUT)
            GPIO.output(17, GPIO.HIGH)
            sleep (.5)
            GPIO.output(17, GPIO.LOW)


        elif (button == "lightblue"):
            pygame.init()
            sound = pygame.mixer.Sound ("blue2.wav")
            sound.play()

            GPIO.setup(17, GPIO.OUT)
            GPIO.output(17, GPIO.HIGH)
            sleep (.5)
            GPIO.output(17, GPIO.LOW)

        elif (button == "blue"):
            pygame.init()
            sound = pygame.mixer.Sound ("violet2.wav")
            sound.play()

            GPIO.setup(17, GPIO.OUT)
            GPIO.output(17, GPIO.HIGH)
            sleep (.5)
            GPIO.output(17, GPIO.LOW)
            
        elif (button == "violet"):
            pygame.init()
            sound = pygame.mixer.Sound ("pink2.wav")
            sound.play()

            GPIO.setup(17, GPIO.OUT)
            GPIO.output(17, GPIO.HIGH)
            sleep (.5)
            GPIO.output(17, GPIO.LOW)

##############################
# the main part of the program
##############################
# create the window 
window = Tk()
# set the window title 
window.title("The Pi-lophone")
# generate the GUI 
p = MainGUI(window)
# display the GUI and wait for user interaction 
window.mainloop()
